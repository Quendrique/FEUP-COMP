/* Generated By:JJTree: Do not edit this line. ASTArrayIndex.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

import org.w3c.dom.Node;
import semantic.*;

public
class ASTArrayIndex extends SimpleNode {
  public ASTArrayIndex(int id) {
    super(id);
  }

  public ASTArrayIndex(Jmm p, int id) {
    super(p, id);
  }

  @Override
  public String getReturnType() {
    return "int";
  }

  @Override
  public void checkNodeSemantic() {
    ((SimpleNode) this.jjtGetChild(0)).scope = this.scope;
    if(!((SimpleNode) this.jjtGetChild(0)).getReturnType().equals("int")){
      super.printSemanticError("Array index must be of type int");
    }
    
    if (((SimpleNode) this.parent).getId() == JmmTreeConstants.JJTIDENTIFIER) {
      STO parentSymbol = SimpleNode.symbolTable.doesSymbolExist(((ASTIdentifier) this.parent).getIdentifier(), ((ASTIdentifier) this.parent).getScope());
      if (parentSymbol == null) {
        parentSymbol = SimpleNode.symbolTable.doesGlobalExist(((ASTIdentifier) this.parent).getIdentifier());
      } 
      if (!parentSymbol.getType().equals("int[]")) {
        super.printSemanticError("Variable must be of type int[] in order to access an array position");
      }
      if (parentSymbol != null && !parentSymbol.isInitialized()) {
        super.printSemanticError("Variable " + ((ASTIdentifier) this.parent).getIdentifier() + " not initialized");
      }
    } else if (((SimpleNode) this.parent).getId() == JmmTreeConstants.JJTARRAYASSIGN) {
      STO parentSymbol = SimpleNode.symbolTable.doesSymbolExist(((ASTArrayAssign) this.parent).getIdentifier(), ((ASTArrayAssign) this.parent).getScope());
      if (parentSymbol == null) {
        parentSymbol = SimpleNode.symbolTable.doesGlobalExist(((ASTArrayAssign) this.parent).getIdentifier());
      } 
      if (!parentSymbol.getType().equals("int[]")) {
        super.printSemanticError("Variable must be of type int[] in order to access an array position");
      }
      if (parentSymbol != null && !parentSymbol.isInitialized()) {
        super.printSemanticError("Variable " + ((ASTArrayAssign) this.parent).getIdentifier() + " not initialized");
      }
    }
  }

}
/* JavaCC - OriginalChecksum=63f0b766d05a0bd31b56c0214cb0bc26 (do not edit this line) */
