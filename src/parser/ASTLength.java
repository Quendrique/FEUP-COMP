/* Generated By:JJTree: Do not edit this line. ASTLength.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

public
class ASTLength extends SimpleNode {
  public ASTLength(int id) {
    super(id);
  }

  public ASTLength(Jmm p, int id) {
    super(p, id);
  }

  @Override
  public void checkNodeSemantic() {
    //System.out.println("debug ast length: parent return type -> " + ((SimpleNode) this.parent).getClass());
    if (this.parent instanceof ASTIdentifier || this.parent instanceof ASTCall) {

      if (!((SimpleNode) this.parent).getSymbolReturn().equals("int[]")) {
        super.printSemanticError("The length property can only be accessed in objects of type int[]");
      }
    } else {
      if (((SimpleNode) this.parent).returnType == null || !((SimpleNode) this.parent).returnType.equals("int[]")) {
        super.printSemanticError("The length property can only be accessed in objects of type int[]");
      }
    }
  }

}
/* JavaCC - OriginalChecksum=000062e1cd2b5218a42c259eb26d339e (do not edit this line) */
