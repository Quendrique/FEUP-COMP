class FindMaximum {
	int[] test_arr;

	public int find_maximum(int[] arr) {
		int i;
		int maximum;
		int value;
		boolean testBoolean;
		int testing;
		int[] testing_arrays;

		// int (+ - / * <) int

		i = 1 < 1; 
		i = 1 + 1;
		i = testBoolean - i;
		i = i + i;
		i = testing_arrays[0] + testing_arrays[0];
		i = testing_arrays / 1;
		i = i.test_array_index_type_int() + 1;
		i = i.get_array() * 1;
		i = i.get_array().length + 1;
		i = testing_arrays[1].get_array().length + 1; //TODO but not an error regarding this part

		// boolean && boolean

		testBoolean = testBoolean && testBoolean;
		testBoolean = (1 < 2) && testBoolean;
		testBoolean = 1 && testBoolean;
		testBoolean = i && testBoolean;
		testBoolean = i.get_array().length && testBoolean;
		testBoolean = i.boolean_return_test() && true;
		testBoolean = this.boolean_return_test() && true; //TODO but not an error regarding this part

		// (array)[int]

		testing_arrays[2] = 0;
		testing_arrays[true] = 1;
		testing_arrays[testBoolean] = 0;
		i[0] = 1; //TODO



 		testing = 2;
		maximum = arr[0];
		while (testing[1] < arr.length) {
			value = arr[i];
			if (maximum < value) {
				maximum = value;
			} else {
			}
			i = i + 1;
		}

		return maximum;
	}

	public int test_array_index_type_int(int[] arr) {
		int[] testing_arrays;
		int var1;
		int var2;

		var1 = 1;
		var2 = 2;

		testing_arrays[var2] = 1;
		testing_arrays[var1 + var2] = 2;

		return var1;
	}

	public boolean boolean_return_test() {
		return true;
	}

	public int build_test_arr() {
		test_arr = new int[5]; //TODO
		test_arr[0] = 14;
		test_arr[1] = 28;
		test_arr[2] = 0;
		test_arr[3] = 0-5; // No unary minus in Java--
		test_arr[4] = 12;

		return 0;
	}

	public int[] get_array() {
		return test_arr;
	}

	public static void main(String[] args) {
		FindMaximum fm;

		boolean testing;
		int[] testingArray;

		testingArray.get_array().length;

		fm = new FindMaximum(); //TODO
		fm.build_test_arr();

		ioPlus.printResult(fm.find_maximum());
	}
}