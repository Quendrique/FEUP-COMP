/* Generated By:JJTree&JavaCC: Do not edit this line. JmmConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JmmConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 5;
  /** RegularExpression Id. */
  int EXTENDS = 6;
  /** RegularExpression Id. */
  int PUBLIC = 7;
  /** RegularExpression Id. */
  int STATIC = 8;
  /** RegularExpression Id. */
  int VOID = 9;
  /** RegularExpression Id. */
  int MAIN = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int WHILE = 13;
  /** RegularExpression Id. */
  int RETURN = 14;
  /** RegularExpression Id. */
  int OB = 15;
  /** RegularExpression Id. */
  int CB = 16;
  /** RegularExpression Id. */
  int OSQB = 17;
  /** RegularExpression Id. */
  int CSQB = 18;
  /** RegularExpression Id. */
  int OPRNT = 19;
  /** RegularExpression Id. */
  int CPRNT = 20;
  /** RegularExpression Id. */
  int CM = 21;
  /** RegularExpression Id. */
  int SCM = 22;
  /** RegularExpression Id. */
  int EQLS = 23;
  /** RegularExpression Id. */
  int NOT = 24;
  /** RegularExpression Id. */
  int AND = 25;
  /** RegularExpression Id. */
  int LS = 26;
  /** RegularExpression Id. */
  int PLS = 27;
  /** RegularExpression Id. */
  int MNS = 28;
  /** RegularExpression Id. */
  int DVD = 29;
  /** RegularExpression Id. */
  int MLT = 30;
  /** RegularExpression Id. */
  int INT = 31;
  /** RegularExpression Id. */
  int BOOLEAN = 32;
  /** RegularExpression Id. */
  int STRING = 33;
  /** RegularExpression Id. */
  int INTEGER = 34;
  /** RegularExpression Id. */
  int TRUE = 35;
  /** RegularExpression Id. */
  int FALSE = 36;
  /** RegularExpression Id. */
  int THIS = 37;
  /** RegularExpression Id. */
  int NEW = 38;
  /** RegularExpression Id. */
  int LENGTH = 39;
  /** RegularExpression Id. */
  int IDENTIFIER = 40;
  /** RegularExpression Id. */
  int INTEGERLITERAL = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"class\"",
    "\"extends\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\"=\"",
    "\"!\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"int\"",
    "\"boolean\"",
    "\"String\"",
    "<INTEGER>",
    "\"true\"",
    "\"flase\"",
    "\"this\"",
    "\"new\"",
    "\"length\"",
    "<IDENTIFIER>",
    "<INTEGERLITERAL>",
  };

}
