class TestExamples {

	int t;
	int t;
	boolean b;
	int[] p;

  public int[] get_array() {
    return p;
  }

  public int testReturnRight() {
    int i;
    i = 0;
    return i;
  }

  public int testReturnWrong() {
    boolean bool;
    bool = false;
    return bool;
  }

	public static void main(String[] args) {
		TestExternal var;
    TestExamples testClass;
    int i;
    int[] array;
    boolean b_main;

    testClass = new TestExamples();

    i = 1; // works
    array = new int[4];
    array[1] = 1;
    testClass = new TestExamples(); // works - correct
    b = i && true; // doesnt work - correct 
    b = 1 && p; // doesnt work - correct 
    b = true && true; // works - correct

    t=p.length; // works - correct
    t=b.length; // doesnt work - correct 
    t=array.length; // works - correct
    a=0; // works

    var.call(); // doesnt work - correct 

    b = !1; // // doesnt work - correct
    b = !true; // works - correct

    if(b){
      b = !b;
    } else {
      b;
    }

    if(i){ // doesnt work - correct
      b = !b;
    } else {
      b;
    }

    if(p){ // doesnt work - correct
      b = !b;
    } else {
      b;
    }

    notDeclared = 5; // doesnt work - correct

    while(i < 5){
      i;
    }

    while(p){ //doesnt work - correct
      i;
    }
    
    i + 1; // works
    2+1; // works
    i+i; // works
    i = i + p; // works

    b_main = true && false; // works - correct
    b_main = 1 < 1; // works - correct

    i = (1+1) + (2+3); // works
    var = new TestExamples(); // doesnt work - correct
    var.test(i, i); // doesnt work - correct
    a = 0; // doesnt work - correct

    i = array[true]; // doesnt work - correct
    i = array; // doesnt work - correct
    i = array[1]; // works - correct
    i = (testClass).get_array().length + 1; // works - correct 

    this.get_array();

    1 + true;
    1 < true;
    1 && false;
    1 && 3;

    false && true;
    3 < 4;

    i[1] = 0;

    testClass.testReturnRight(1);
    testClass.testReturnRight(b_main);
    testClass.testReturnRight();

    i.testing();
	}
}
